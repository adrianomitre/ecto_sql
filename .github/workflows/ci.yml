name: CI
on: [push, pull_request]
jobs:
  test-elixir:
    runs-on: ubuntu-18.04
    container: hexpm/elixir:${{ matrix.elixir }}-erlang-${{ matrix.otp }}-ubuntu-bionic-20200403

    strategy:
      fail-fast: false
      matrix:
        include:
          - elixir: 1.7.4
            otp: 19.3.6.13
          - elixir: 1.8.2
            otp: 20.3.8.26
          - elixir: 1.9.4
            otp: 20.3.8.26
          - elixir: 1.10.4
            otp: 21.3.8.16
          - elixir: 1.10.4
            otp: 23.0.2

    steps:
      - uses: actions/checkout@v2.3.1
      - name: Install Dependencies
        run: |
          apt-get update
          apt-get install -y git
          mix local.rebar --force
          mix local.hex --force
          mix deps.get
      - run: mix test
      - run: mix test.as_a_dep

  test-mysql:
    runs-on: ubuntu-18.04

    services:
      mysql:
        image: mysql:${{ matrix.mysql_version }}
        env:
          MYSQL_ROOT_PASSWORD: root
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    container: hexpm/elixir:1.10.4-erlang-23.0.2-ubuntu-bionic-20200403

    strategy:
      fail-fast: false
      matrix:
        mysql_version: ["5.7", "8.0"]

    steps:
      - name: Install MySQL Client
        run: |
          apt-get update
          apt-get install -y wget ca-certificates gnupg
          mkdir ~/.gnupg
          echo "disable-ipv6" >> ~/.gnupg/dirmngr.conf
          apt-key adv --recv-keys --keyserver keys.gnupg.net 8C718D3B5072E1F5
          echo "deb http://repo.mysql.com/apt/debian/ stretch mysql-${{ matrix.mysql_version }}" >> /etc/apt/sources.list.d/mysql.list
          apt-get update
          apt-get install --allow-unauthenticated -y mysql-client
          mysql --version
      - uses: actions/checkout@v2.3.1
      - name: Install Dependencies
        run: |
          apt-get install -y git
          mix local.rebar --force
          mix local.hex --force
          mix deps.get
      - run: MYSQL_URL=root:root@mysql ECTO_ADAPTER=myxql mix test
  
  test-mssql:
    runs-on: ubuntu-latest

    services:
      mssql:
        image: mcr.microsoft.com/mssql/server:${{ matrix.mssql_version }}
        env:
          ACCEPT_EULA: Y
          SA_PASSWORD: some!Password
        ports:
          - 1433:1433

    strategy:
      matrix:
        mssql_version: ["2017-latest", "2019-latest"]
        otp: [23.0.2]
        elixir: [1.10.4]
        
    env:
      ACCEPT_EULA: Y
      MIX_ENV: test
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Install MsSql Client Tools
        run: |
          sudo apt-get update
          sudo apt-get install -y mssql-tools unixodbc-dev
      - uses: actions/checkout@v2.3.1
      - name: Setup elixir
        uses: actions/setup-elixir@v1.3.0
        with:
          otp-version: ${{matrix.otp}}
          elixir-version: ${{matrix.elixir}}
      - name: Install Dependencies
        run: mix deps.get
      - run: |
          export PATH="/opt/mssql-tools/bin:$PATH"
          ECTO_ADAPTER=tds mix test
          
  test-pg:
    runs-on: ubuntu-18.04

    services:
      pg:
        image: postgres:${{ matrix.pg_version }}
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    container: elixir:1.9-slim

    strategy:
      matrix:
        pg_version: ["9.5", "9.6", "11"]

    steps:
      - name: Install PG Client
        run: |
          apt-get update
          apt-get install -y wget ca-certificates gnupg
          wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add -
          echo "deb http://apt.postgresql.org/pub/repos/apt/ buster-pgdg main ${{ matrix.pg_version }}" >> /etc/apt/sources.list.d/pgdg.list
          apt-get update
          apt-get install -y postgresql-${{ matrix.pg_version }} postgresql-contrib-${{ matrix.pg_version }}
          psql --version
      - uses: actions/checkout@v2.3.1
      - name: Install Dependencies
        run: |
          apt-get install -y git
          mix local.rebar --force
          mix local.hex --force
          mix deps.get
      - run: PG_URL=postgres:postgres@pg ECTO_ADAPTER=pg mix test
